#ifndef __GUIMyFrame1__
#define __GUIMyFrame1__

/**
@file
Subclass of MyFrame1, which is generated by wxFormBuilder.
*/

#include "GUI.h"

//// end generated include

#include <wx/dcmemory.h>
#include <wx/dcclient.h>
#include <wx/dcbuffer.h>
#include <wx/colourdata.h>
#include <wx/slider.h>

#include "CurveGenerator.h"
#include <wx/log.h>
#include <thread> 
#include <cmath>

struct Vector4 {

public:
	double data[4];
	Vector4();
	void Set(double d1, double d2, double d3);

	double GetX();
	double GetY();
	double GetZ();
	Vector4 operator-(const Vector4 &);

	friend Vector4 operator*(const Vector4 &, double);

};

class Matrix4 {

public:
	double data[4][4];
	Matrix4();
	Matrix4 operator*(const Matrix4);
	friend Vector4 operator*(const Matrix4, const Vector4);

};

Matrix4 RotateX(float x);
Matrix4 RotateY(float y);
Matrix4 RotateZ(float z);
Matrix4 Projection(float w, float h);
Vector4 Normalization(Vector4 v);

/** Implementing MyFrame1 */
class GUIMyFrame1 : public MyFrame1
{
	protected:
		// Handlers for MyFrame1 events.
		void m_button_kart_click( wxCommandEvent& event );
		void m_button_biegun_click( wxCommandEvent& event );
		void m_slider_a_scroll( wxScrollEvent& event );
		void m_slider_b_scroll( wxScrollEvent& event );
		void m_slider_c_scroll( wxScrollEvent& event );
		void m_slider_phi_scroll( wxScrollEvent& event );
		void m_slider_psi_scroll( wxScrollEvent& event );
		void m_slider_teta_scroll( wxScrollEvent& event );
		void m_slider_n_scroll( wxScrollEvent& event );
		void m_slider_m_scroll( wxScrollEvent& event );
		void m_slider_k_scroll( wxScrollEvent& event );
		void m_slider_x_scroll( wxScrollEvent& event );
		void m_slider_y_scroll( wxScrollEvent& event );
		void m_slider_z_scroll( wxScrollEvent& event );
		void m_checkBoxDot_check( wxCommandEvent& event );
		void m_checkBoxLine_check( wxCommandEvent& event );
		void m_checkBoxAnimuj_clicked( wxCommandEvent& event );
		void m_onTimer(wxTimerEvent& event);
	public:
		/** Constructor */
		GUIMyFrame1( wxWindow* parent );
	//// end generated class members
	private:

		float len = 1000;
		float step = 0.1;
		bool m_uklad_kart = true;

		CurveGenerator generator;

		std::deque<Segment> data;
		Vector4 rotation;
		void Repaint();

		
};


#endif // __GUIMyFrame1__
